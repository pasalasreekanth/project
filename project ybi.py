# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BfNo51S3RKD8DDxDntrngYfP56WSB35S

**Big Sales Preiction using Random Forest Regressor**

1.   Item_Idenfier
2.   Item_Weight
1.   Item_Fat_Content
2.   Item_Visibility
1.   Item_Type
2.   Item_MRP
1.   Outlet_Identifier
2.   Outlet_Establishment_Year
1.   Outlet_Size
2.   Outlet_Location_Type
1.   Outlet_Type
2.   Item_Outlet_Sales

**Import Library**
"""

import pandas as pd

import numpy as np

"""**Import CSV as DataFrame**"""

df = pd.read_csv(r'https://raw.githubusercontent.com/YBI-Foundation/Dataset/main/Big%20Sales%20Data.csv')

"""**Describe Data**"""

df.head()

df.info()

df.columns

df.describe()

"""**Data Visualization**"""

import seaborn as sns
sns.pairplot(df)

"""**Data Preprocessing**"""

df[['Item_Identifier']].value_counts()

df[['Item_Fat_Content']].value_counts()

df.replace({'Item_Fat_Content': {'LF':'Low Fat','reg':'Regular', 'low fat':'Low Fat'}},inplace=True)

df[['Item_Fat_Content']].value_counts()

df.replace({'Item_Fat_Content':{'Low Fat': 0,'Regular':1}}, inplace=True)

df[['Item_Type']].value_counts()

"""**Define Taraget Variable(y) and Feature Variables(x)"""

y = df['Item_Outlet_Sales']

y.shape

y

X = df[['Item_Weight','Item_Fat_Content', 'Item_Visibility', 'Item_Type', 'Item_MRP', 'Outlet_Identifier','Outlet_Establishment_Year', 'Outlet_Size', 'Outlet_Location_Type', 'Outlet_Type']]

x = df.drop(['Item_Identifier', 'Item_Outlet_Sales'], axis=1)

X.shape

x

"""**Train Test Split**"""

from sklearn.model_selection import train_test_split

x_train, x_test, y_train, y_test = train_test_split(x,y, test_size =0.1, random_state=2529)

x_train.shape, x_test.shape, y_train.shape, y_test.shape

"""**Modeling**"""

from sklearn.ensemble import RandomForestRegressor

rfr = RandomForestRegressor(random_state=2529)

rfr.fit(X_train, y_train)

"""**Prediction**"""

y_pred = rfr.predict(X_test)

y_pred.shape

y_pred

"""***Modal Evaluation***"""

from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score

mean_squared_error(y_test,y_pred)